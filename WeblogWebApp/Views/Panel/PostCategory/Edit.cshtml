@model WeblogWebApp.Models.PostCategory.AddEditViewModel

@{
    ViewBag.Title = "ویرایش دسته بندی";
    Layout = "~/Views/Panel/_PanelLayout.cshtml";

}

@section styles {
    <link href="~/plugins/persianDateTimePicker/persian-datepicker.min.css" rel="stylesheet" />
    <link href="~/Plugins/select2/select2.min.css" rel="stylesheet" />
    <link href="~/Plugins/sweetalert/sweetalert2.min.css" rel="stylesheet" />

}

<style>
    .select2-selection {
        min-height: 38px;
    }

    .select2-selection__rendered {
        padding-top: 5px !important;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 38px
    }

    .select2-container--default .select2-selection--single {
        background-color: #fff;
        border: 1px solid #E4E6EF;
        border-radius: 4px;
    }
</style>


<div class="col-lg-10 mx-auto mb-10 card card-body">

    @using (Html.BeginForm("Edit", "PostCategory", FormMethod.Post, new { enctype = "multipart/form-data", @id = "CategorySubmitForm" }))
    {


        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-8">
                    <div class="col-md-12">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                                <span class="text-danger"> *</span>
                            </div>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @id = "catTitle", @placeholder = "عنوان دسته بندی را اینجا وارد کنید" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "" })
                                <span class="text-danger"> *</span>
                            </div>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control", @id = "slug", @placeholder = "نامک دسته بندی را اینجا وارد کنید" } })
                                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.CategoriesSelectList, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-12">
                                <select id="parentCategories" name="ParentCatId" class="w-100" >
                                    <option value="0">هیچکدام</option>
                                    @foreach (var category in Model.CategoriesSelectList)
                                    {
                                        <option selected="@(category.Id == Model.ParentCatId)" value="@category.Id" >@category.Title</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>


                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Describtion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.Describtion, new { @class = "form-control", @id = "describtion", @name = "describtion", @rows = "9", @style = "resize: none", @placeholder = "توضیحات دسته بندی را اینجا وارد کنید" })
                                @Html.ValidationMessageFor(model => model.Describtion, "", new { @class = "text-danger" })
                            </div>
                            <br />
                            <br />
                        </div>
                    </div>

                </div>

                <div class="col-md-4">
                    <div class="panel panel-primary">
                        <div class="panel-heading">تصویر بند انگشتی</div>
                        <div class="panel-body">
                            <img id="imgPreviewThumbnail" width="250" height="170" style="margin: 8px auto" class="thumbnail" src="@Model.ThumbnailImagePath" />
                            <div class="form-group">
                                <div class="col-md-10">
                                    <input type="file" accept="image/*" id="imageThumbnail" name="ThumbnailImage" />
                                </div>
                            </div>
                        </div>
                    </div>

                </div>



            </div>


            <div class="form-group">
                <div class="col-md-12">
                    <input id="submit-cat" type="submit" value="ثبت" class="btn btn-success w-100" />
                    <input type="hidden" value="@Model.Id" id="catId" name="CatId" />
                </div>
            </div>
        </div>

    }


</div>



<br />
<br />
<br />


@section scripts {
    <!--begin::Page Scripts(used by this page)-->

    <script src="~/Plugins/select2/select2.min.js"></script>
    <script src="~/Plugins/sweetalert/sweetalert2.all.min.js"></script>


    <!--تنظیمات select2-->
    <script>
        $('#parentCategories').select2({
            dir: "rtl",
        });
    </script>
    <script>
        var isPersianText = new RegExp("[\u0600-\u06FF]");

        var isEnglishText = /^[A-Za-z0-9 _-]+$/;
    </script>

    <!-- بررسی لحظه ای فیلد ها -->

    <script>
        $("#catTitle").keyup(function (e) {
            e.preventDefault();
            if (!isPersianText.test($(this).val()) && !isEmptyOrSpaces($(this).val())) {
                alert("عنوان دسته بندی  باید فارسی باشد");
            }
        });
        $("#slug").keyup(function (e) {
            e.preventDefault();
            if (!isEnglishText.test($(this).val()) && !isEmptyOrSpaces($(this).val())) {
                alert("نامک دسته بندی  باید حروف انگلیسی باشد");
            }
        });

    </script>

    <!-- پیش نمایش تصویر -->
    <script>
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgPreviewThumbnail').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imageThumbnail").change(function () {
            readURL(this);
        });
    </script>

    <!-- ثبت اطلاعات فرم -->
    <script>
        $('#submit-cat').click(function(e) {

            e.preventDefault();
            const id = $("#catId").val();

            const title = $("#catTitle").val();

            const slug = $("#slug").val();

            const describtion = $("#describtion").val();



            if (isEmptyOrSpaces(title)) {
                ErrorHandler("عنوان دسته بندی  باید وارد شود");
            }
            if (isEmptyOrSpaces(slug)) {
                ErrorHandler("نامک دسته بندی  باید وارد شود");
            }
            if (isEmptyOrSpaces(describtion)) {
                ErrorHandler("توضیحات دسته بندی  باید وارد شود");
            }

            if (!isPersianText.test(title) && !isEmptyOrSpaces(title)) {
                ErrorHandler("عنوان دسته بندی  باید فارسی باشد");

            }
            if (!isEnglishText.test(slug) && !isEmptyOrSpaces(slug)) {
                ErrorHandler("نامک دسته بندی  باید حروف انگلیسی باشد");
            }

            if (modals.length > 0) {
                swal.queue(modals);
                modals = [];
                return;
            }

            const form = document.getElementById("CategorySubmitForm");

            const postData = new FormData(form);




            $.ajax({
                url: $(this).data('url'),
                contentType: false,
                processData: false,
                type: 'POST',
                data: postData,
                success: function(result) {

                    if (result.isSuccess) {
                        swal.fire('موفق!',
                            result.message,
                            'success').then(function(isConfirm) {
                            window.location.href = '@Url.Action("List", "PostCategory")';
                        });
                    } else {
                        swal.fire('هشدار!',
                            result.message,
                            'warning');
                    }

                }
            });

        });
    </script>

    <script>
        var modals = [];

        // تابع بررسی خالی یا اسپیس بدون حرف بودن فیلد ها
        function isEmptyOrSpaces(str) {
            return str === null || str.match(/^ *$/) !== null;
        }

        // نمایش ارور های فیلد ها
        function ErrorHandler(message) {

            modals.push({ title: "خطا!", text: message, icon: "error" });

        }

    </script>
}
